name: JavaScript Producer

on:
  push:
    paths:
      - '**.user.js'
      - '.github/workflows/**'
  pull_request:
    paths:
      - '**.user.js'
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  TERSER_OPTIONS: '--compress drop_console=true,pure_funcs=[console.log] --mangle --comments false'
  USERJS_DIR: 'userjs'

jobs:
  process-js:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          npm install -g terser

      - name: Initialize workspace
        id: init
        run: |
          mkdir -p "${{ env.USERJS_DIR }}"
          touch "${{ env.USERJS_DIR }}/.gitkeep"
          echo "# Checksums generated on $(date '+%Y-%m-%d %H:%M:%S')" > "${{ env.USERJS_DIR }}/checksums.txt"
          echo "initial_count=$(find . -name "*.user.js" -not -path "./${{ env.USERJS_DIR }}/*" | wc -l)" >> $GITHUB_OUTPUT

      - name: Process JavaScript files
        id: process
        env:
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          process_script() {
            local file="$1"
            local filename=$(basename "$file")
            local base="${filename%.user.js}"
            local target_dir="${{ env.USERJS_DIR }}"
            
            echo "Processing $filename..."
            
            # Extract and validate metadata
            meta_block=$(awk '/\/\/ ==UserScript==/{p=1;print;next}/\/\/ ==\/UserScript==/{p=0;print;exit}p{print}' "$file")
            
            # Get multilingual metadata
            get_meta_value() {
              local pattern="$1"
              local meta="$2"
              local vi_value=$(echo "$meta" | grep -m 1 "@${pattern}:vi" | sed -E "s/\/\/ @${pattern}:vi\s+//")
              if [ -n "$vi_value" ]; then
                echo "$vi_value"
                return
              fi
              local en_value=$(echo "$meta" | grep -m 1 "@${pattern}:en" | sed -E "s/\/\/ @${pattern}:en\s+//")
              if [ -n "$en_value" ]; then
                echo "$en_value"
                return
              fi
              echo "$meta" | grep -m 1 "@${pattern}" | sed -E "s/\/\/ @${pattern}\s+//"
            }

            # Get metadata values with language priority
            local name=$(get_meta_value "name" "$meta_block")
            local description=$(get_meta_value "description" "$meta_block")
            local version=$(echo "$meta_block" | grep -m 1 "@version" | sed -E 's/\/\/ @version\s+//')
            local author=$(echo "$meta_block" | grep -m 1 "@author" | sed -E 's/\/\/ @author\s+//')
            
            # Validate required metadata
            if [ -z "$name" ] || [ -z "$description" ] || [ -z "$version" ] || [ -z "$author" ]; then
              echo "::error::Missing required metadata in $filename"
              return 1
            fi
            
            # Update metadata URLs
            meta_block=$(echo "$meta_block" | sed -E "
              s|^// @downloadURL .*|// @downloadURL https://github.com/$GITHUB_REPOSITORY/raw/main/$target_dir/${base}.user.js|
              s|^// @updateURL .*|// @updateURL https://github.com/$GITHUB_REPOSITORY/raw/main/$target_dir/${base}.meta.js|
              s|^// @supportURL .*|// @supportURL https://github.com/$GITHUB_REPOSITORY/issues|
              /^\/\/ ==\/UserScript==/ i // @lastModified $(date -u +"%Y-%m-%dT%H:%M:%SZ")
            ")
            
            # Extract code and minify
            {
              echo "$meta_block"
              awk '/\/\/ ==\/UserScript==/{p=1;next}p{print}' "$file" | terser ${{ env.TERSER_OPTIONS }}
            } > "$target_dir/${base}.user.js"
            
            # Save metadata separately
            echo "$meta_block" > "$target_dir/${base}.meta.js"
            
            # Generate checksum
            echo "$(sha256sum "$target_dir/${base}.user.js" | cut -d' ' -f1)  ${base}.user.js" >> "$target_dir/checksums.txt"
            
            echo "✓ Processed: $filename"
            return 0
          }
          
          export -f process_script
          
          # Process all .user.js files not in userjs directory
          find . -name "*.user.js" -not -path "./${{ env.USERJS_DIR }}/*" -print0 | 
          while IFS= read -r -d '' file; do
            if process_script "$file"; then
              rm -f "$file"  # Remove original after successful processing
            else
              exit 1
            fi
          done
          
          echo "processed_count=$(find "${{ env.USERJS_DIR }}" -name "*.user.js" | wc -l)" >> $GITHUB_OUTPUT

      - name: Update README
        if: steps.process.outputs.processed_count > 0
        run: |
          # Create README content
          cat > README.md << 'EOL'
          <div align="center">
          
          # 📦 Bộ Sưu Tập UserScript
          
          ![Scripts](https://img.shields.io/badge/scripts-${{ steps.process.outputs.processed_count }}-blue?style=flat-square)
          ![Cập nhật](https://img.shields.io/github/last-commit/${{ github.repository }}?style=flat-square)
          ![Trạng thái](https://github.com/${{ github.repository }}/actions/workflows/js-producer.yml/badge.svg)
          
          *Bộ sưu tập UserScript đã được tối ưu hóa*
          
          </div>
          
          ## 📜 Danh Sách Script
          
          <table>
          <tr>
          <th>Script</th>
          <th>Chi tiết</th>
          </tr>
          EOL
          
          get_meta_value() {
            local pattern="$1"
            local file="$2"
            local vi_value=$(grep -m 1 "@${pattern}:vi" "$file" | sed -E "s/\/\/ @${pattern}:vi\s+//")
            if [ -n "$vi_value" ]; then
              echo "$vi_value"
              return
            fi
            local en_value=$(grep -m 1 "@${pattern}:en" "$file" | sed -E "s/\/\/ @${pattern}:en\s+//")
            if [ -n "$en_value" ]; then
              echo "$en_value"
              return
            fi
            grep -m 1 "@${pattern}" "$file" | sed -E "s/\/\/ @${pattern}\s+//"
          }
          
          # Add script entries
          while IFS= read -r -d '' file; do
            name=$(get_meta_value "name" "$file")
            version=$(grep -m 1 "@version" "$file" | sed -E 's/\/\/ @version\s+//')
            desc=$(get_meta_value "description" "$file")
            author=$(grep -m 1 "@author" "$file" | sed -E 's/\/\/ @author\s+//')
            base=$(basename "$file")
            
            cat >> README.md << EOL
          <tr>
          <td>
          <b>${name}</b><br>
          <small>📦 v${version}</small><br>
          <small>👤 ${author}</small>
          </td>
          <td>
          <p>${desc}</p>
          <p>
          <a href="https://github.com/${{ github.repository }}/raw/main/${{ env.USERJS_DIR }}/${base}">📥 Cài đặt</a> |
          <a href="https://github.com/${{ github.repository }}/blob/main/${{ env.USERJS_DIR }}/${base}">📝 Mã nguồn</a>
          </p>
          </td>
          </tr>
          EOL
          done < <(find "${{ env.USERJS_DIR }}" -name "*.user.js" -print0 | sort -z)
          
          # Add footer
          cat >> README.md << 'EOL'
          </table>
          
          ## 🔒 Bảo mật
          
          Tất cả script đều được nén (minify) để bảo vệ và tối ưu hiệu suất. Xác minh tính toàn vẹn bằng checksum bên dưới.
          
          <details>
          <summary>📝 SHA-256 Checksums</summary>
          
          ```
          EOL
          
          cat "${{ env.USERJS_DIR }}/checksums.txt" >> README.md
          
          cat >> README.md << 'EOL'
          ```
          </details>
          
          ---
          <div align="center">
          <i>Cập nhật lần cuối: $(date +'%Y-%m-%d %H:%M:%S')</i>
          </div>
          EOL

      - name: Commit changes
        if: steps.process.outputs.processed_count > 0
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add "${{ env.USERJS_DIR }}/" README.md
          
          git commit -m "📦 Xử lý UserScript
          
          Thống kê:
          - Đã xử lý: ${{ steps.process.outputs.processed_count }}/${{ steps.init.outputs.initial_count }}
          - Cập nhật: $(date +'%Y-%m-%d %H:%M:%S')
          
          Thay đổi:
          - ✨ Cập nhật metadata
          - 🔒 Tạo checksums
          - 📝 Cập nhật README"
          
          git push
